---
# TODO: linux config
# TODO: install packages
# Update repostorio
- name: Update apt
  ansible.builtin.apt:
    update_cache: true
    force_apt_get: true
    cache_valid_time: 3600

# Instala os pacotes necessarios
- name: Install packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - wget
    - fontconfig
    # - neovim
    - git
    - stow
    - tmux
    - zsh
    - bat
    - zoxide
    - unzip

# Mudar para o zsh
- name: Definir o zsh como shell padrao do usuário
  ansible.builtin.command: chsh -s /bin/zsh {{ ansible_user }}

# Garantir que o zsh esta no /etc/shells
- name: Garantir que o zsh esta no /etc/shells
  ansible.builtin.lineinfile:
    path: /etc/shells
    line: /bin/zsh
    state: present

# Verifica o shell atual
- name: Verificar o shell atual
  ansible.builtin.command: echo $SHELL
  register: current_shell

# Exibir o shell
- name: Exibir o shell atual
  ansible.builtin.debug:
    msg: "shell atual: {{ current_shell.stdout }}"

# TODO: oh my zsh config

# Download oh my zsh script
- name: Download Oh My Zsh installation script
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    dest: /tmp/install_ohmyzsh.sh

# Install oh my zsh
- name: Run Oh My Zsh installation script
  ansible.builtin.command: sh /tmp/install_ohmyzsh.sh --unattended
  register: ohmyzsh_result
  failed_when: "'FAILED' in ohmyzsh_result.stderr"

# Criar um link simbolico para o bat
- name: Criar link simbolico para o bat
  ansible.builtin.file:
    src: /usr/bin/batcat
    dest: /usr/bin/bat
    state: link
# TODO: clone dotfiles repository

- name: Clonar repositório dotfiles
  ansible.builtin.git:
    repo: https://github.com/saadmarcelo/dotfiles.git
    dest: /home/{{ ansible_user }}/dotfiles/
    update: true
  become: false

# TODO: install font

# Download saucedcodepro font
- name: Baixar SauceCodePro Nerd Font
  ansible.builtin.get_url:
    url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/SourceCodePro.zip
    dest: /tmp/SourceCodePro.zip

# Unzip font file
- name: Descompactar o arquivo da fonte
  ansible.builtin.unarchive:
    src: /tmp/SourceCodePro.zip
    dest: /usr/local/share/fonts
    remote_src: true

# update font cache
- name: Atualizar cache de fontes
  ansible.builtin.command: fc-cache -fv

# Remove ZIP file
- name: Remover o arquivo ZIP
  ansible.builtin.file:
    path: /tmp/SourceCodePro.zip
    state: absent

# TODO: tmux config

# Create .tmux folder
- name: Create .tmux folder
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/.tmux/
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory
    mode: "0755"

# Download TPM plugin
- name: Download TPM plugin
  ansible.builtin.git:
    repo: https://github.com/tmux-plugins/tpm.git
    dest: /home/{{ ansible_user }}/.tmux/plugins/tpm
    update: true
  become: false

# Garantir permissao de execucao do scritp de instalcao dos plugins do tmux
- name: Garantir permissão de execução para o script install_plugins
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/.tmux/plugins/tpm/bin/install_plugins
    mode: "0755"
    state: file
  become: false

- name: Instalar plugins do Tmux
  ansible.builtin.shell: /home/{{ ansible_user }}/.tmux/plugins/tpm/bin/install_plugins
  args:
    executable: /bin/bash
  environment:
    TMUX_PLUGIN_MANAGER_PATH: /home/{{ ansible_user }}/.tmux/plugins
    HOME: /home/{{ ansible_user }}
    USER: "{{ ansible_user }}"
  become: false

# TODO: stow config

# Criar os links simbolicos com o stow
- name: Criar os links simbólicos com o stow para ansible_user e root
  ansible.builtin.shell: stow -d /home/{{ item.user }}/dotfiles -t /home/{{ item.user }} {{ item.config }}
  become: "{{ item.user == 'root' }}"
  args:
    executable: /bin/bash
  loop:
    - { user: "{{ ansible_user }}", config: "tmux" }
    - { user: "{{ ansible_user }}", config: "nvim" }
    - { user: "{{ ansible_user }}", config: "zshrc" }
    - { user: "root", config: "tmux" }
    - { user: "root", config: "nvim" }
    - { user: "root", config: "zshrc" }
# # Criar os links simbolicos com o stow
# - name: Criar os links simbolicos com o stow
#   ansible.builtin.shell: stow -d /home/{{ ansible_user }}/dotfiles -t /home/{{ ansible_user }} {{ item }}
#   become: false
#   args:
#     executable: /bin/bash
#   loop:
#     - tmux
#     - nvim
#     - zshrc
