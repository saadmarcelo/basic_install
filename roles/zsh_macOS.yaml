---
- name: Installing zsh Packages
  community.general.homebrew:
    name: "{{ brew_packages }}"
    state: present
  register: result
  until: result is successful
  vars:
    brew_packages:
      - zsh
      - zsh-autosuggestions
      - zsh-syntax-highlighting

- name: Change zsh to default shell
  ansible.builtin.shell: sudo chsh -s $(which zsh)

- name: Definir variável com o diretório home do usuário
  set_fact:
    user_home: "{{ ansible_env.HOME }}"

- name: Ensuring oh my zsh Is Installed
  ansible.builtin.stat:
    path: "{{ user_home }}/.oh-my-zsh/"
  register: oh_my_zsh_check

- name: Instal oh my zsh
  ansible.builtin.shell: sudo sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  when: not oh_my_zsh_check.stat.exists

# Clone dotfiles repository
- name: Clone dotfiles repository
  ansible.builtin.git:
    repo: "https://github.com/saadmarcelo/dotfiles.git"
    dest: "{{ user_home }}/dotfiles"
    version: main
    clone: true
    update: false

# Tmux plugins
- name: Clone tmux tpm repository
  ansible.builtin.git:
    repo: "https://github.com/tmux-plugins/tpm"
    dest: "{{ user_home }}/.tmux/plugins/tpm"
    version: main
    clone: true
    update: false

- name: Source de tmux plugin
  ansible.builtin.shell: tmux source ~/.tmux.conf

# Stow
- name: Link nvim
  ansible.builtin.shell: stow nvim
  args:
    chdir: "{{ user_home }}/dotfiles"

- name: Link tmux
  ansible.builtin.shell: stow tmux
  args:
    chdir: "{{ user_home }}/dotfiles"

- name: Link zshrc
  ansible.builtin.shell: stow zshrc
  args:
    chdir: "{{ user_home }}/dotfiles"

- name: Link kitty
  ansible.builtin.shell: stow kitty
  args:
    chdir: "{{ user_home }}/dotfiles"
